return (
  <div style={{ padding: '30px', background: '#f5f9fd', fontFamily: 'Arial, sans-serif' }}>
    {/* Offer Prefix Section */}
    <div style={{ 
      marginBottom: '30px', 
      padding: '20px', 
      background: '#ffffff', 
      boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)', 
      borderRadius: '8px' 
    }}>
      <label style={{ fontWeight: 'bold', marginRight: '10px' }}>Offer Prefix:</label>
      <input 
        type="text" 
        value={prefix} 
        onChange={e => setPrefix(e.target.value)} 
        onFocus={handleFocus}
        onBlur={handleBlur}
        disabled={!prefixEditEnabled} 
        style={baseInputStyle} 
      />
      <button type="button" onClick={handleModifyPrefix} style={{ marginRight: '10px', padding: '5px 10px' }}>Modify Prefix</button>
      <button type="button" onClick={handleSavePrefix} style={{ padding: '5px 10px' }}>Save Prefix</button>
    </div>

    <div style={{ display: 'flex', alignItems: 'flex-start' }}>
      {/* Left Form */}
      <form onSubmit={handleSubmitOffer} style={{ 
        flex: '1', 
        marginRight: '30px', 
        background: '#ffffff', 
        padding: '20px', 
        borderRadius: '8px', 
        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)' 
      }}>
        <h3 style={{ color: '#1e4a7b', marginBottom: '15px' }}>Addresses</h3>

        {/* Address Fields */}
        <div style={{ marginBottom: '10px' }}>
          <label style={{ fontWeight: 'bold' }}>Loading Address:</label><br />
          <AutoCompleteInput apiKey={process.env.REACT_APP_HERE_API_KEY} onSelect={setLoadingLocation} />
        </div>
        <div style={{ marginBottom: '10px' }}>
          <label style={{ fontWeight: 'bold' }}>Unloading Address:</label><br />
          <AutoCompleteInput apiKey={process.env.REACT_APP_HERE_API_KEY} onSelect={setUnloadingLocation} />
        </div>

        {/* Checkboxes */}
        <div style={{ marginBottom: '15px' }}>
          <label style={{ marginRight: '20px' }}>
            <input type="checkbox" checked={hideLocations} onChange={e => setHideLocations(e.target.checked)} />
            {" "}Hide Locations
          </label>
          <label>
            <input type="checkbox" checked={palletsExchange} onChange={e => setPalletsExchange(e.target.checked)} />
            {" "}Pallets Exchange
          </label>
        </div>

        {/* Date & Time Inputs */}
        <fieldset style={{ border: 'none', marginBottom: '15px' }}>
          <legend style={{ fontWeight: 'bold', color: '#1e4a7b' }}>Loading Time</legend>
          <label>Start: </label>
          <input type="date" value={loadStartDate} onChange={e => setLoadStartDate(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle} />
          <input type="time" value={loadStartTime} onChange={e => setLoadStartTime(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyleTime}/>
          <label>End: </label>
          <input type="date" value={loadEndDate} onChange={e => setLoadEndDate(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle}/>
          <input type="time" value={loadEndTime} onChange={e => setLoadEndTime(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle}/>
        </fieldset>

        <fieldset style={{ border: 'none', marginBottom: '15px' }}>
          <legend style={{ fontWeight: 'bold', color: '#1e4a7b' }}>Unloading Time</legend>
          <label>Start: </label>
          <input type="date" value={unloadStartDate} onChange={e => setUnloadStartDate(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle}/>
          <input type="time" value={unloadStartTime} onChange={e => setUnloadStartTime(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyleTime} />
          <label>End: </label>
          <input type="date" value={unloadEndDate} onChange={e => setUnloadEndDate(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle}/>
          <input type="time" value={unloadEndTime} onChange={e => setUnloadEndTime(e.target.value)} onFocus={handleFocus} onBlur={handleBlur} style={baseInputStyle}/>
        </fieldset>

        {/* Measurements */}
        <div style={{ marginBottom: '10px' }}>
          <label><strong>Length (m):</strong></label>
          <input type="text" value={lengthM} onChange={e => setLengthM(e.target.value)} style={{ width: '60px', marginLeft: '5px', baseInputStyle}} onFocus={handleFocus}
  onBlur={handleBlur}/>
          <label style={{ marginLeft: '20px' }}><strong>Weight (t):</strong></label>
          <input type="text" value={weightT} onChange={e => setWeightT(e.target.value)} style={{ width: '60px', marginLeft: '5px', baseInputStyle}} onFocus={handleFocus}
  onBlur={handleBlur}/>
        </div>

        <div style={{ marginBottom: '10px' }}>
          <label><strong>External Comment:</strong></label><br />
          <input type="text" value={externalComment} onChange={e => setExternalComment(e.target.value)} style={{ width: '100%' , baseInputStyle}} onFocus={handleFocus}
  onBlur={handleBlur} />
        </div>

        {/* Payment */}
        <div style={{ marginBottom: '15px' }}>
          <label><strong>Freight Charge:</strong></label>
          <input type="text" value={freightCharge} onChange={e => setFreightCharge(e.target.value)} style={{ width: '100px', marginLeft: '5px', baseInputStyle}} onFocus={handleFocus}
  onBlur={handleBlur}/>
          <label style={{ marginLeft: '15px' }}><strong>Currency:</strong></label>
          <select value={currency} onChange={e => setCurrency(e.target.value)} style={{ marginLeft: '5px', width: '80px' }}>
            <option value=""></option>
            <option value="EUR">EUR</option>
            <option value="RON">RON</option>
            <option value="HUF">HUF</option>
          </select>
          <label style={{ marginLeft: '15px' }}><strong>Payment Due:</strong></label>
          <input type="date" value={paymentDue} onChange={e => setPaymentDue(e.target.value)} onFocus={handleFocus}
  onBlur={handleBlur}
  style={baseInputStyle} />
        </div>

        {/* Vehicle and Body Types */}
        <div style={{ marginBottom: '15px' }}>
          <strong>Vehicle Type(s):</strong><br />
          {Object.entries(vehicleTypes).map(([id, label]) => (
            <label key={id} style={{ display: 'inline-block', marginRight: '15px' }}>
              <input type="checkbox" checked={selectedVehicles.includes(Number(id))} onChange={() => toggleVehicleType(Number(id))} />
              {" "}{label}
            </label>
          ))}
        </div>

        <div style={{ marginBottom: '20px' }}>
          <strong>Body Type(s) (max 5):</strong><br />
          {Object.entries(bodyTypes).map(([id, label]) => (
            <label key={id} style={{ display: 'inline-block', width: '180px' }}>
              <input type="checkbox" checked={selectedBodies.includes(Number(id))} onChange={() => toggleBodyType(Number(id))} />
              {" "}{label}
            </label>
          ))}
        </div>

        <button type="submit" style={{
          padding: '10px 20px',
          background: '#1e4a7b',
          color: '#fff',
          border: 'none',
          borderRadius: '4px',
          fontWeight: 'bold',
          cursor: 'pointer'
        }}>Submit Offer</button>
      </form>

      {/* Submitted Offers */}
      <div style={{ flex: '1', background: '#ffffff', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)' }}>
        <h3 style={{ color: '#1e4a7b' }}>Submitted Offers</h3>
        {offers.length === 0 ? (
          <p>No offers submitted yet.</p>
        ) : (
          <table style={{ borderCollapse: 'collapse', width: '100%', fontSize: '14px' }}>
            <thead>
              <tr style={{ background: '#d7e9f7' }}>
                <th style={{ padding: '10px', textAlign: 'left' }}>Offer</th>
                <th style={{ padding: '10px', textAlign: 'left' }}>Loading</th>
                <th style={{ padding: '10px', textAlign: 'left' }}>Unloading</th>
                <th style={{ padding: '10px', textAlign: 'center' }}>Action</th>
              </tr>
            </thead>
            <tbody>
              {offers.map((offer, idx) => (
                <tr key={offer.id} style={{ background: idx % 2 === 0 ? '#f2f8fc' : '#ffffff' }}>
                  <td style={{ padding: '8px' }}>{offer.externalNumber || offer.id}</td>
                  <td style={{ padding: '8px' }}>{offer._loading}</td>
                  <td style={{ padding: '8px' }}>{offer._unloading}</td>
                  <td style={{ textAlign: 'center' }}>
                    <button 
                      onClick={() => handleDeleteOffer(offer.id)} 
                      style={{ padding: '5px 10px', background: '#e74c3c', color: '#fff', border: 'none', borderRadius: '4px' }}
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
    </div>
  </div>
);

}
